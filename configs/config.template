clusters = A, B

A.bootstrap.servers = ${SOURCE}
B.bootstrap.servers = ${DESTINATION}

config.storage.topic=${GROUP_ID}-mirrormaker-cluster-configs
status.storage.topic=${GROUP_ID}-mirrormaker-cluster-status
offset.storage.topic=${GROUP_ID}-mirrormaker-cluster-offsets

A->B.enabled = true

A->B.topics = ${TOPICS}

replication.factor = ${REPLICATION_FACTOR}
sync.topic.acls.enabled = ${ACLS_ENABLED}
tasks.max = ${TASKS_MAX}

replication.policy.separator =
source.cluster.alias = 
target.cluster.alias =


A.group.id=${GROUP_ID}
A.client.id=${GROUP_ID}

B.group.id=${GROUP_ID}
B.client.id=${GROUP_ID}

############################# Internal Topic Settings  #############################
checkpoints.topic.replication.factor=${REPLICATION_FACTOR}
heartbeats.topic.replication.factor=${REPLICATION_FACTOR}
offset-syncs.topic.replication.factor=${REPLICATION_FACTOR}

# The replication factor for connect internal topics "mm2-configs.B.internal", "mm2-offsets.B.internal" and
# "mm2-status.B.internal"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offset.storage.replication.factor=${REPLICATION_FACTOR}
status.storage.replication.factor=${REPLICATION_FACTOR}
config.storage.replication.factor=${REPLICATION_FACTOR}

# customize as needed
# replication.policy.separator = _
# sync.topic.acls.enabled = false
# emit.heartbeats.interval.seconds = 5
